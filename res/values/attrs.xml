<resources>

    <attr name="textColor" format="color" />
    <attr name="textSize" format="dimension" />
    <attr name="textBold" format="boolean" />

    <declare-styleable name="BatteryView">
        <attr name="positivePoleWidth" format="dimension" />
        <attr name="positivePoleHeight" format="dimension" />
        <attr name="color" format="color" />
    </declare-styleable>
    <declare-styleable name="KGridView">
        <attr name="columnCount" format="integer" />
        <attr name="iconTextMargin" format="dimension" />
        <attr name="itemHeight" format="dimension" />
        <attr name="itemMarginLeft" format="dimension" />
        <attr name="itemMarginTop" format="dimension" />
        <attr name="itemMarginRight" format="dimension" />
        <attr name="itemMarginBottom" format="dimension" />
        <attr name="textSize" />
        <attr name="textColor" />
        <attr name="textBold" />
    </declare-styleable>
    <declare-styleable name="KProgressBar">
        <attr name="progressBarBg" format="reference" />
        <attr name="progressBarFg" format="reference" />
        <attr name="min" format="integer" />
        <attr name="max" format="integer" />
        <attr name="progress" format="integer" />
    </declare-styleable>
    <declare-styleable name="SpinningWheel">
        <attr name="background" format="color|reference" />
        <attr name="degreeDelta" format="float" />
        <attr name="logoDrawable" format="reference" />
        <attr name="spinnerDrawable" format="reference" />
    </declare-styleable>
    <declare-styleable name="Panel">

        <!-- Defines panel animation duration in ms. -->
        <attr name="animationDuration" format="integer" />
        <!-- Defines panel position on the screen. -->
        <attr name="position">

            <!-- Panel placed at top of the screen. -->
            <enum name="top" value="0" />
            <!-- Panel placed at bottom of the screen. -->
            <enum name="bottom" value="1" />
            <!-- Panel placed at left of the screen. -->
            <enum name="left" value="2" />
            <!-- Panel placed at right of the screen. -->
            <enum name="right" value="3" />
        </attr>
        <!-- Identifier for the child that represents the panel's handle. -->
        <attr name="handle" format="reference" />
        <!-- Identifier for the child that represents the panel's content. -->
        <attr name="content" format="reference" />
        <!-- Defines if flying gesture forces linear interpolator in animation. -->
        <attr name="linearFlying" format="boolean" />
        <!-- Defines size relative to parent (must be in form: nn%p). -->
        <attr name="weight" format="fraction" />
        <!-- Defines opened handle (drawable/color). -->
        <attr name="openedHandle" format="reference|color" />
        <!-- Defines closed handle (drawable/color). -->
        <attr name="closedHandle" format="reference|color" />
    </declare-styleable>
    <declare-styleable name="SmoothButton">
        <attr name="transitionDrawable" format="reference" />
        <attr name="transitionDrawableLength" format="integer" />
        <attr name="transitionTextColorUp" format="color" />
        <attr name="transitionTextColorDown" format="color" />
    </declare-styleable>
    <declare-styleable name="Switcher">

        <!-- Defines switcher animation duration in ms. -->
        <attr name="animationDuration" />
        <!-- Defines switcher idle timeout in ms. -->
        <attr name="idleTimeout" format="integer" />
        <!-- Defines opened handle (drawable). -->
        <attr name="decreaseButton" format="reference" />
        <!-- Defines opened handle (drawable). -->
        <attr name="increaseButton" format="reference" />
    </declare-styleable>
    <!-- 网络 -->
    <declare-styleable name="PullToRefresh">

        <!-- A drawable to use as the background of the Refreshable View -->
        <attr name="ptrRefreshableViewBackground" format="reference|color" />

        <!-- A drawable to use as the background of the Header and Footer Loading Views -->
        <attr name="ptrHeaderBackground" format="reference|color" />

        <!-- Text Color of the Header and Footer Loading Views -->
        <attr name="ptrHeaderTextColor" format="reference|color" />

        <!-- Text Color of the Header and Footer Loading Views Sub Header -->
        <attr name="ptrHeaderSubTextColor" format="reference|color" />

        <!-- Mode of Pull-to-Refresh that should be used -->
        <attr name="ptrMode">
            <flag name="disabled" value="0x0" />
            <flag name="pullFromStart" value="0x1" />
            <flag name="pullFromEnd" value="0x2" />
            <flag name="both" value="0x3" />
            <flag name="manualOnly" value="0x4" />

            <!-- These last two are depreacted -->
            <flag name="pullDownFromTop" value="0x1" />
            <flag name="pullUpFromBottom" value="0x2" />
        </attr>

        <!-- Whether the Indicator overlay(s) should be used -->
        <attr name="ptrShowIndicator" format="reference|boolean" />

        <!-- Drawable to use as Loading Indicator. Changes both Header and Footer. -->
        <attr name="ptrDrawable" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Header View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableStart" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Footer View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableEnd" format="reference" />

        <!-- Whether Android's built-in Over Scroll should be utilised for Pull-to-Refresh. -->
        <attr name="ptrOverScroll" format="reference|boolean" />

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views -->
        <attr name="ptrHeaderTextAppearance" format="reference" />

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views Sub Header -->
        <attr name="ptrSubHeaderTextAppearance" format="reference" />

        <!-- Style of Animation should be used displayed when pulling. -->
        <attr name="ptrAnimationStyle">
            <flag name="rotate" value="0x0" />
            <flag name="flip" value="0x1" />
        </attr>

        <!-- Whether the user can scroll while the View is Refreshing -->
        <attr name="ptrScrollingWhileRefreshingEnabled" format="reference|boolean" />

        <!--
        	Whether PullToRefreshListView has it's extras enabled. This allows the user to be 
        	able to scroll while refreshing, and behaves better. It acheives this by adding
        	Header and/or Footer Views to the ListView.
        -->
        <attr name="ptrListViewExtrasEnabled" format="reference|boolean" />

        <!--
        	Whether the Drawable should be continually rotated as you pull. This only
        	takes effect when using the 'Rotate' Animation Style.
        -->
        <attr name="ptrRotateDrawableWhilePulling" format="reference|boolean" />

        <!-- BELOW HERE ARE DEPRECEATED. DO NOT USE. -->
        <attr name="ptrAdapterViewBackground" format="reference|color" />
        <attr name="ptrDrawableTop" format="reference" />
        <attr name="ptrDrawableBottom" format="reference" />
    </declare-styleable>
    <declare-styleable name="ViewPagerIndicator">
        <attr name="vpiTitlePageIndicatorStyle" format="reference" />
        <attr name="vpiTabPageIndicatorStyle" format="reference" />
    </declare-styleable>
    <declare-styleable name="CirclePageIndicator">
        <attr name="vpiCirclePageIndicatorStyle" format="reference" />
        <attr name="centered" format="boolean" />
        <attr name="fillColor" format="color" />
        <attr name="pageColor" format="color" />
        <attr name="android:orientation" />
        <attr name="radius" format="dimension" />
        <attr name="snap" format="boolean" />
        <attr name="strokeColor" format="color" />
        <attr name="strokeWidth" format="dimension" />
        <attr name="android:background" />
        <attr name="padding" format="dimension" />
        <attr name="unIndicateCircleType">
            <enum name="empty" value="0" />
            <enum name="full" value="1" />
        </attr>
    </declare-styleable>
    <declare-styleable name="SlidingMenu">
        <attr name="mode">
            <enum name="left" value="0" />
            <enum name="right" value="1" />
        </attr>
        <attr name="viewAbove" format="reference" />
        <attr name="viewBehind" format="reference" />
        <attr name="behindOffset" format="dimension" />
        <attr name="behindWidth" format="dimension" />
        <attr name="behindScrollScale" format="float" />
        <attr name="touchModeAbove">
            <enum name="margin" value="0" />
            <enum name="fullscreen" value="1" />
        </attr>
        <attr name="touchModeBehind">
            <enum name="margin" value="0" />
            <enum name="fullscreen" value="1" />
        </attr>
        <attr name="shadowDrawable" format="reference" />
        <attr name="shadowWidth" format="dimension" />
        <attr name="fadeEnabled" format="boolean" />
        <attr name="fadeDegree" format="float" />
        <attr name="selectorEnabled" format="boolean" />
        <attr name="selectorDrawable" format="reference" />
    </declare-styleable>
    <declare-styleable name="ColorPickerPreference">
        <attr name="showDialogTitle" format="boolean|reference" />
        <attr name="showSelectedColorInList" format="boolean|reference" />
    </declare-styleable>
    <declare-styleable name="ColorPickerView">
        <attr name="alphaChannelVisible" format="boolean|reference" />
        <attr name="alphaChannelText" format="string|reference" />
        <attr name="colorPickerSliderColor" format="color|reference" />
        <attr name="colorPickerBorderColor" format="color|reference" />
    </declare-styleable>
    <declare-styleable name="FlipView">
        <attr name="orientation" format="enum">
            <enum name="vertical" value="0" />
            <enum name="horizontal" value="1" />
        </attr>
        <attr name="overFlipMode" format="enum">
            <enum name="glow" value="0" />
            <enum name="rubber_band" value="1" />
        </attr>
    </declare-styleable>

</resources>